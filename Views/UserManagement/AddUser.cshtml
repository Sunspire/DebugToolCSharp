@model DebugToolCSharp.Models.UserManagement
@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>UserManagement</h4>
        <hr />
        @*Html.ValidationSummary(true, "", new { @class = "text-danger" })*@
        @{
            if (!string.IsNullOrEmpty(Model.Message))
            {
                var cssClass = string.Empty;
                if (Model.Success)
                {
                    cssClass = "text-info";
                }
                else
                {
                    cssClass = "text-danger";
                }

                @Html.Label(@Model.Message, new { @class = cssClass })
            }
        }
        <div class="form-group">
            @Html.LabelFor(model => model.UserName, "User Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserLogin, "User Login", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserLogin, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserLogin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserPassword, "User Password", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RoleName, "Role", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*Html.EditorFor(model => model.RoleName, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.RoleId, new SelectList(Model.Roles, "Id", "Role"))
                @Html.ValidationMessageFor(model => model.RoleName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
